local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer
local tier = localPlayer:GetAttribute("Tier")
local Remote = ReplicatedStorage.Signals.RemoteEvents:FindFirstChild("GetWoolRemote")
local instantkill = false
local autobuy = false
local automerge = false
local autoupgrade = false
local buyamount = 1
local buyamounts = {1,3,10,30,50,100,1000,10000}
local tycoon
for _,v in workspace.Tycoon.Tycoons:GetChildren() do
    if v.Owner.Value == localPlayer then
        tycoon = v
    end
end
local gun 
if tool and tool:FindFirstChild("GunClient") and tool:FindFirstChild("Configuration") then
    gun = tool
end

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Check for existing UI and deletes it if it exists
local CoreGui = game:GetService("CoreGui")
local prev = CoreGui:FindFirstChild("ClaimGUI")
if prev then
    -- Try to reset toggles if possible
    pcall(function()
        if _G then
            _G.autobuy = false
            _G.automerge = false
            _G.autoupgrade = false
        end
    end)
    pcall(function()
        if _G then _G.instantkill = false end
    end)
    prev:Destroy()
end

-- UI Setup
local ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
ScreenGui.Name = "ClaimGUI"

-- Hide/minimize logic
local isMinimized = false
local miniBtn

-- Main Frame (not ScrollingFrame)
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 400, 0, 320)
Frame.Position = UDim2.new(0, 50, 0, 50)
Frame.BackgroundColor3 = Color3.fromRGB(36, 37, 42)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = false
Frame.BackgroundTransparency = 0.05
Frame.ClipsDescendants = true
Frame.ZIndex = 2

-- Add drop shadow
local Shadow = Instance.new("ImageLabel", Frame)
Shadow.Image = "rbxassetid://1316045217"
Shadow.Size = UDim2.new(1, 30, 1, 30)
Shadow.Position = UDim2.new(0, -15, 0, -15)
Shadow.BackgroundTransparency = 1
Shadow.ImageTransparency = 0.7
Shadow.ZIndex = 1

-- ScrollingFrame for content
local Scroll = Instance.new("ScrollingFrame", Frame)
Scroll.Size = UDim2.new(1, 0, 1, -40)
Scroll.Position = UDim2.new(0, 0, 0, 40)
Scroll.BackgroundTransparency = 1
Scroll.BorderSizePixel = 0
Scroll.CanvasSize = UDim2.new(0, 0, 0, 400)
Scroll.ScrollBarThickness = 8
Scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
Scroll.ClipsDescendants = true
Scroll.ZIndex = 2

-- Top Bar for Dragging and Hide
local TopBar = Instance.new("TextButton", Frame)
TopBar.Size = UDim2.new(1, 0, 0, 40)
TopBar.Position = UDim2.new(0, 0, 0, 0)
TopBar.BackgroundColor3 = Color3.fromRGB(28, 29, 34)
TopBar.Text = "Merge Tower Defense - By Dev-Jay"
TopBar.TextColor3 = Color3.fromRGB(200, 200, 255)
TopBar.Font = Enum.Font.GothamBold
TopBar.TextSize = 22
TopBar.AutoButtonColor = false
TopBar.BorderSizePixel = 0
TopBar.ZIndex = 3
TopBar.TextXAlignment = Enum.TextXAlignment.Center
TopBar.TextYAlignment = Enum.TextYAlignment.Center
TopBar.BackgroundTransparency = 0.1
TopBar.ClipsDescendants = true
TopBar.TextStrokeTransparency = 0.8
TopBar.TextStrokeColor3 = Color3.fromRGB(0,0,0)
TopBar.TextWrapped = true
local topBarCorner = Instance.new("UICorner")
topBarCorner.CornerRadius = UDim.new(0, 8)
topBarCorner.Parent = TopBar

-- Hide/Minimize Button
local HideBtn = Instance.new("TextButton", TopBar)
HideBtn.Size = UDim2.new(0, 32, 0, 32)
HideBtn.Position = UDim2.new(1, -38, 0, 4)
HideBtn.Text = "_"
HideBtn.TextSize = 24
HideBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
HideBtn.TextColor3 = Color3.new(1,1,1)
HideBtn.BorderSizePixel = 0
HideBtn.ZIndex = 4
local hideCorner = Instance.new("UICorner", HideBtn)
hideCorner.CornerRadius = UDim.new(0, 8)

local function minimizeUI()
    Frame.Visible = false
    isMinimized = true
    if UserInputService.TouchEnabled then
        -- Mobile: show mini draggable button
        miniBtn = Instance.new("TextButton", ScreenGui)
        miniBtn.Size = UDim2.new(0, 60, 0, 60)
        miniBtn.Position = UDim2.new(0.5, -30, 0.5, -30)
        miniBtn.Text = "▶"
        miniBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
        miniBtn.TextColor3 = Color3.new(1,1,1)
        miniBtn.BorderSizePixel = 0
        local miniCorner = Instance.new("UICorner", miniBtn)
        miniCorner.CornerRadius = UDim.new(1, 0)
        local dragging = false
        local dragStart, startPos
        miniBtn.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = miniBtn.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then dragging = false end
                end)
            end
        end)
        miniBtn.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.Touch then
                local delta = input.Position - dragStart
                miniBtn.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
        miniBtn.MouseButton1Click:Connect(function()
            Frame.Visible = true
            isMinimized = false
            miniBtn:Destroy()
        end)
    end
end
HideBtn.MouseButton1Click:Connect(minimizeUI)

-- PC: LeftControl toggles UI
UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.LeftControl and not UserInputService.TouchEnabled then
        if isMinimized then
            Frame.Visible = true
            isMinimized = false
            if miniBtn then miniBtn:Destroy() end
        else
            minimizeUI()
        end
    end
end)

-- Custom Drag Logic (PC & Mobile)
local dragging, dragInput, dragStart, startPos
TopBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
TopBar.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Section Headers
local function makeHeader(text, y)
    local lbl = Instance.new("TextLabel", Scroll)
    lbl.Size = UDim2.new(0, 180, 0, 22)
    lbl.Position = UDim2.new(0, 20, 0, y)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = Color3.fromRGB(180, 180, 200)
    lbl.Font = Enum.Font.GothamSemibold
    lbl.TextSize = 16
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.ZIndex = 3
    return lbl
end
makeHeader("Toggles", 55)
makeHeader("Automation", 145)
makeHeader("Settings", 235)

-- Helper for button style
local function styleBtn(btn, color)
    btn.BackgroundColor3 = color or Color3.fromRGB(50, 50, 80)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.BorderSizePixel = 0
    btn.TextSize = 17
    btn.Font = Enum.Font.Gotham
    btn.AutoButtonColor = true
    btn.ZIndex = 4
    local corner = Instance.new("UICorner", btn)
    corner.CornerRadius = UDim.new(0, 8)
    local stroke = Instance.new("UIStroke", btn)
    stroke.Color = Color3.fromRGB(80,80,120)
    stroke.Thickness = 1
    stroke.Transparency = 0.5
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(70, 70, 120)
    end)
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = color or Color3.fromRGB(50, 50, 80)
    end)
end

-- Column layout positions
local col1x, col2x = 20, 210
local rowh = 40

-- Instantkill Toggle
InstantKillBtn = Instance.new("TextButton", Scroll)
InstantKillBtn.Size = UDim2.new(0, 170, 0, rowh)
InstantKillBtn.Position = UDim2.new(0, col1x, 0, 80)
InstantKillBtn.Text = "💀 Instantkill: OFF"
styleBtn(InstantKillBtn, Color3.fromRGB(100, 40, 40))
InstantKillBtn.MouseButton1Click:Connect(function()
    instantkill = not instantkill
    InstantKillBtn.Text = instantkill and "💀 Instantkill: ON" or "💀 Instantkill: OFF"
    InstantKillBtn.TextColor3 = instantkill and Color3.fromRGB(255,80,80) or Color3.new(1,1,1)
    if instantkill then
        if not gun then
            game.StarterGui:SetCore("SendNotification", {Title="Instantkill", Text="Equip your gun for instantkill to work!", Duration=3})
        else
            game.StarterGui:SetCore("SendNotification", {Title="Instantkill", Text="Instantkill enabled!", Duration=2})
        end
    else
        game.StarterGui:SetCore("SendNotification", {Title="Instantkill", Text="Instantkill disabled!", Duration=2})
    end
end)

-- Autobuy, Automerge, Autoupgrade Buttons
if AutobuyBtn then AutobuyBtn:Destroy() end
if AutomergeBtn then AutomergeBtn:Destroy() end
if AutoupgradeBtn then AutoupgradeBtn:Destroy() end
AutobuyBtn = Instance.new("TextButton", Scroll)
AutobuyBtn.Size = UDim2.new(0, 170, 0, rowh)
AutobuyBtn.Position = UDim2.new(0, col1x, 0, 170)
AutobuyBtn.Text = "Autobuy: OFF"
styleBtn(AutobuyBtn)
AutobuyBtn.MouseButton1Click:Connect(function()
    _G.autobuy = not _G.autobuy
    AutobuyBtn.Text = "Autobuy: "..(_G.autobuy and "ON" or "OFF")
    AutobuyBtn.BackgroundColor3 = _G.autobuy and Color3.fromRGB(80, 120, 80) or Color3.fromRGB(50, 50, 80)
end)
AutomergeBtn = Instance.new("TextButton", Scroll)
AutomergeBtn.Size = UDim2.new(0, 170, 0, rowh)
AutomergeBtn.Position = UDim2.new(0, col2x, 0, 170)
AutomergeBtn.Text = "Automerge: OFF"
styleBtn(AutomergeBtn)
AutomergeBtn.MouseButton1Click:Connect(function()
    _G.automerge = not _G.automerge
    AutomergeBtn.Text = "Automerge: "..(_G.automerge and "ON" or "OFF")
    AutomergeBtn.BackgroundColor3 = _G.automerge and Color3.fromRGB(80, 120, 80) or Color3.fromRGB(50, 50, 80)
end)
AutoupgradeBtn = Instance.new("TextButton", Scroll)
AutoupgradeBtn.Size = UDim2.new(0, 170, 0, rowh)
AutoupgradeBtn.Position = UDim2.new(0, col2x, 0, 215)
AutoupgradeBtn.Text = "Autoupgrade: OFF"
styleBtn(AutoupgradeBtn)
AutoupgradeBtn.MouseButton1Click:Connect(function()
    _G.autoupgrade = not _G.autoupgrade
    AutoupgradeBtn.Text = "Autoupgrade: "..(_G.autoupgrade and "ON" or "OFF")
    AutoupgradeBtn.BackgroundColor3 = _G.autoupgrade and Color3.fromRGB(80, 120, 80) or Color3.fromRGB(50, 50, 80)
end)

-- Buyamount Dropdown (fix: always show all values)
if BuyAmountDropdown then BuyAmountDropdown:Destroy() end
BuyAmountDropdown = Instance.new("TextButton", Scroll)
BuyAmountDropdown.Size = UDim2.new(0, 170, 0, rowh)
BuyAmountDropdown.Position = UDim2.new(0, col2x, 0, 80)
BuyAmountDropdown.Text = "Buy Amount: "..tostring(buyamount)
styleBtn(BuyAmountDropdown, Color3.fromRGB(60, 60, 90))
local dropdownOpen = false
local dropdownFrame
BuyAmountDropdown.MouseButton1Click:Connect(function()
    if dropdownOpen then
        if dropdownFrame then dropdownFrame:Destroy() end
        dropdownOpen = false
        return
    end
    dropdownOpen = true
    dropdownFrame = Instance.new("Frame", Scroll)
    dropdownFrame.Size = UDim2.new(0, 170, 0, #buyamounts*28)
    dropdownFrame.Position = UDim2.new(0, col2x, 0, 120)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(50,50,70)
    dropdownFrame.BorderSizePixel = 0
    dropdownFrame.ZIndex = 5
    local corner = Instance.new("UICorner", dropdownFrame)
    corner.CornerRadius = UDim.new(0, 8)
    for i,amt in ipairs(buyamounts) do
        local opt = Instance.new("TextButton", dropdownFrame)
        opt.Size = UDim2.new(1,0,0,28)
        opt.Position = UDim2.new(0,0,0,(i-1)*28)
        opt.Text = tostring(amt)
        styleBtn(opt, Color3.fromRGB(60,60,90))
        opt.MouseButton1Click:Connect(function()
            buyamount = amt
            BuyAmountDropdown.Text = "Buy Amount: "..tostring(amt)
            dropdownFrame:Destroy()
            dropdownOpen = false
        end)
    end
end)

-- SpeedBox and Auto Claim Toggle
if SpeedBox then SpeedBox:Destroy() end
SpeedBox = Instance.new("TextBox", Scroll)
SpeedBox.Size = UDim2.new(0, 170, 0, rowh)
SpeedBox.Position = UDim2.new(0, col1x, 0, 260)
SpeedBox.PlaceholderText = "Claims/sec (e.g. 100)"
SpeedBox.Text = "100"
SpeedBox.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
SpeedBox.TextColor3 = Color3.new(1, 1, 1)
SpeedBox.BorderSizePixel = 0
SpeedBox.TextSize = 17
SpeedBox.Font = Enum.Font.Gotham
local corner = Instance.new("UICorner", SpeedBox)
corner.CornerRadius = UDim.new(0, 8)

if Toggle then Toggle:Destroy() end
Toggle = Instance.new("TextButton", Scroll)
Toggle.Size = UDim2.new(0, 170, 0, rowh)
Toggle.Position = UDim2.new(0, col2x, 0, 260)
Toggle.Text = "▶ Start Auto Claim"
styleBtn(Toggle, Color3.fromRGB(50, 50, 80))
Toggle.MouseButton1Click:Connect(function()
    running = not running
    Toggle.Text = running and "⏸ Stop Auto Claim" or "▶ Start Auto Claim"
    if running then
        task.spawn(function()
            while running do
                local speed = tonumber(SpeedBox.Text) or 100
                for _ = 1, speed do
                    Remote:FireServer(tier)
                end
                task.wait(1)
            end
        end)
    end
end)

if KillUIButton then KillUIButton:Destroy() end
KillUIButton = Instance.new("TextButton", Scroll)
KillUIButton.Size = UDim2.new(0, 360, 0, 32)
KillUIButton.Position = UDim2.new(0, 20, 0, 305)
KillUIButton.Text = "✖ Close & Reset UI"
styleBtn(KillUIButton, Color3.fromRGB(120, 40, 40))
KillUIButton.TextSize = 18
KillUIButton.Font = Enum.Font.GothamBold
KillUIButton.MouseButton1Click:Connect(function()
    instantkill = false
    _G.autobuy = false
    _G.automerge = false
    _G.autoupgrade = false
    running = false
    buyamount = 1
    InstantKillBtn.Text = "💀 Instantkill: OFF"
    InstantKillBtn.TextColor3 = Color3.new(1,1,1)
    AutobuyBtn.Text = "Autobuy: OFF"
    AutobuyBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
    AutomergeBtn.Text = "Automerge: OFF"
    AutomergeBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
    AutoupgradeBtn.Text = "Autoupgrade: OFF"
    AutoupgradeBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
    BuyAmountDropdown.Text = "Buy Amount: 1"
    Toggle.Text = "▶ Start Auto Claim"
    ScreenGui:Destroy()
end)

spawn(function()
    while true do
        if _G.autobuy and tycoon then
            local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            firetouchinterest(tycoon.Buttons_E["Add"..buyamount].Head, char.HumanoidRootPart, 0)
            firetouchinterest(tycoon.Buttons_E["Add"..buyamount].Head, char.HumanoidRootPart, 1)
        end
        if _G.automerge and tycoon then
            local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            firetouchinterest(tycoon.Buttons_E.Merge.Head, char.HumanoidRootPart, 0)
            firetouchinterest(tycoon.Buttons_E.Merge.Head, char.HumanoidRootPart, 1)
        end
        if _G.autoupgrade and tycoon then
            local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            firetouchinterest(tycoon.Buttons_E.Upgrade.Head, char.HumanoidRootPart, 0)
            firetouchinterest(tycoon.Buttons_E.Upgrade.Head, char.HumanoidRootPart, 1)
        end
        wait(0.2)
    end
end)

spawn(function()
    while true do
        if instantkill and gun and tycoon and tycoon:FindFirstChild("Round") then
            for i = 1,10 do
                for _,v in ipairs(tycoon.Round:GetChildren()) do
                    if v:FindFirstChild("Humanoid") then
                        v.Humanoid.Health = 0
                    end
                end
            end
        end
        wait(0.5)
    end
end)
